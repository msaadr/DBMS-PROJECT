{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  carts: [],\n  quantity: 0,\n  itemQuantity: 0\n};\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState,\n  reducers: {\n    addToCart(state, action) {\n      const item = action.payload;\n      const existingItem = state.carts.find(cartItem => cartItem.id === item.id);\n      if (existingItem) {\n        existingItem.itemQuantity += 1;\n        console.log(existingItem.itemQuantity);\n      } else {\n        state.carts.push({\n          ...item,\n          itemQuantity: 1,\n          quantity: 1\n        });\n        console.log(car);\n      }\n      state.quantity = state.quantity + 1;\n    },\n    removeFromCart(state, action) {\n      const itemId = action.payload;\n      const existingItem = state.carts.find(cartItem => cartItem.id === itemId.id);\n      if (existingItem) {\n        if (existingItem.itemQuantity > 0 && state.quantity > 0) {\n          existingItem.itemQuantity -= 1;\n          state.quantity = state.quantity - 1;\n        } else {\n          state.carts = state.carts.filter(cartItem => cartItem.id !== itemId);\n        }\n      }\n    },\n    clearAllCart(state) {\n      state.carts = [];\n      state.quantity = 0;\n    }\n  }\n});\nexport const {\n  addToCart,\n  removeFromCart,\n  clearAllCart\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","carts","quantity","itemQuantity","cartSlice","name","reducers","addToCart","state","action","item","payload","existingItem","find","cartItem","id","console","log","push","car","removeFromCart","itemId","filter","clearAllCart","actions","reducer"],"sources":["C:/Users/Bismillah Traders/Desktop/DBMS PROJECT/frontend/src/Redux/StoreSlice/CartSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n    carts: [], \r\n    quantity: 0,\r\n    itemQuantity:0\r\n};\r\n\r\nconst cartSlice = createSlice({\r\n    name: 'cart',\r\n    initialState,\r\n    reducers: {\r\n        addToCart(state, action) {\r\n            const item = action.payload;            \r\n            const existingItem = state.carts.find(cartItem => cartItem.id === item.id);\r\n            if (existingItem) {\r\n                existingItem.itemQuantity += 1;\r\n                console.log(existingItem.itemQuantity)\r\n\r\n            } else {\r\n                state.carts.push({ ...item, itemQuantity: 1,quantity:1});   \r\n                console.log(car);\r\n                \r\n            }\r\n            state.quantity = state.quantity+1;\r\n        },\r\n        removeFromCart(state, action) {\r\n            const itemId = action.payload;\r\n            const existingItem = state.carts.find(cartItem => cartItem.id === itemId.id);\r\n        \r\n            if (existingItem  ) {\r\n                if (existingItem.itemQuantity > 0 && state.quantity>0) {\r\n                    existingItem.itemQuantity -= 1;\r\n                    state.quantity = state.quantity-1;\r\n\r\n                } else {\r\n                    state.carts = state.carts.filter(cartItem => cartItem.id !== itemId);\r\n                }\r\n                \r\n\r\n            }\r\n        },\r\n        clearAllCart(state) {\r\n            state.carts = [];\r\n            state.quantity = 0;\r\n        }\r\n    }\r\n});\r\n\r\nexport const { addToCart, removeFromCart, clearAllCart } = cartSlice.actions;\r\nexport default cartSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EACjBC,KAAK,EAAE,EAAE;EACTC,QAAQ,EAAE,CAAC;EACXC,YAAY,EAAC;AACjB,CAAC;AAED,MAAMC,SAAS,GAAGL,WAAW,CAAC;EAC1BM,IAAI,EAAE,MAAM;EACZL,YAAY;EACZM,QAAQ,EAAE;IACNC,SAASA,CAACC,KAAK,EAAEC,MAAM,EAAE;MACrB,MAAMC,IAAI,GAAGD,MAAM,CAACE,OAAO;MAC3B,MAAMC,YAAY,GAAGJ,KAAK,CAACP,KAAK,CAACY,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,EAAE,KAAKL,IAAI,CAACK,EAAE,CAAC;MAC1E,IAAIH,YAAY,EAAE;QACdA,YAAY,CAACT,YAAY,IAAI,CAAC;QAC9Ba,OAAO,CAACC,GAAG,CAACL,YAAY,CAACT,YAAY,CAAC;MAE1C,CAAC,MAAM;QACHK,KAAK,CAACP,KAAK,CAACiB,IAAI,CAAC;UAAE,GAAGR,IAAI;UAAEP,YAAY,EAAE,CAAC;UAACD,QAAQ,EAAC;QAAC,CAAC,CAAC;QACxDc,OAAO,CAACC,GAAG,CAACE,GAAG,CAAC;MAEpB;MACAX,KAAK,CAACN,QAAQ,GAAGM,KAAK,CAACN,QAAQ,GAAC,CAAC;IACrC,CAAC;IACDkB,cAAcA,CAACZ,KAAK,EAAEC,MAAM,EAAE;MAC1B,MAAMY,MAAM,GAAGZ,MAAM,CAACE,OAAO;MAC7B,MAAMC,YAAY,GAAGJ,KAAK,CAACP,KAAK,CAACY,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,EAAE,KAAKM,MAAM,CAACN,EAAE,CAAC;MAE5E,IAAIH,YAAY,EAAI;QAChB,IAAIA,YAAY,CAACT,YAAY,GAAG,CAAC,IAAIK,KAAK,CAACN,QAAQ,GAAC,CAAC,EAAE;UACnDU,YAAY,CAACT,YAAY,IAAI,CAAC;UAC9BK,KAAK,CAACN,QAAQ,GAAGM,KAAK,CAACN,QAAQ,GAAC,CAAC;QAErC,CAAC,MAAM;UACHM,KAAK,CAACP,KAAK,GAAGO,KAAK,CAACP,KAAK,CAACqB,MAAM,CAACR,QAAQ,IAAIA,QAAQ,CAACC,EAAE,KAAKM,MAAM,CAAC;QACxE;MAGJ;IACJ,CAAC;IACDE,YAAYA,CAACf,KAAK,EAAE;MAChBA,KAAK,CAACP,KAAK,GAAG,EAAE;MAChBO,KAAK,CAACN,QAAQ,GAAG,CAAC;IACtB;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEK,SAAS;EAAEa,cAAc;EAAEG;AAAa,CAAC,GAAGnB,SAAS,CAACoB,OAAO;AAC5E,eAAepB,SAAS,CAACqB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}