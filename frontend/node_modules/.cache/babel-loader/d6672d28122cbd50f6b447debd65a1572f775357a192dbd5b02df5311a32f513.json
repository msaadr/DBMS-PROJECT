{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  carts: [],\n  quantity: 0\n};\nconst cartSlice = createSlice({\n  //creating a slice...You can add the reducers in a slice which are linked like in this case add, remove and clear are linked to a single thing which is product\n  name: 'cart',\n  initialState,\n  //initial state which is defined above\n  reducers: {\n    addToCart(state, action) {\n      //action 1\n      const item = action.payload;\n      console.log(item);\n      const existingItem = state.carts.find(cartItem => cartItem.id === item.id);\n      if (existingItem) {\n        existingItem.quantity += 1;\n      } else {\n        state.carts.push({\n          ...item,\n          quantity: 1\n        });\n      }\n      state.quantity += 1;\n    },\n    removeFromCart(state, action) {\n      //action 2\n      const itemId = action.payload;\n      const existingItem = state.carts.find(cartItem => cartItem.id === itemId);\n      console.log(itemId);\n      if (existingItem) {\n        if (existingItem.quantity > 1) {\n          existingItem.quantity -= 1;\n        } else {\n          state.carts = state.carts.filter(cartItem => cartItem.id !== itemId);\n        }\n        state.quantity -= 1;\n      }\n    },\n    clearAllCart(state) {\n      //action 3\n      state.carts = [];\n      state.quantity = 0;\n    }\n  }\n});\nexport const {\n  addToCart,\n  removeFromCart,\n  clearAllCart\n} = cartSlice.actions; //exporting the functions\n\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","carts","quantity","cartSlice","name","reducers","addToCart","state","action","item","payload","console","log","existingItem","find","cartItem","id","push","removeFromCart","itemId","filter","clearAllCart","actions","reducer"],"sources":["C:/Users/Bismillah Traders/Desktop/DBMS PROJECT/frontend/src/Redux/StoreSlice/CartSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n    carts: [],\r\n    quantity: 0\r\n};\r\n\r\nconst cartSlice = createSlice({   //creating a slice...You can add the reducers in a slice which are linked like in this case add, remove and clear are linked to a single thing which is product\r\n    name: 'cart',\r\n    initialState,  //initial state which is defined above\r\n    reducers: {\r\n        addToCart(state, action) {   //action 1\r\n            const item = action.payload;\r\n            console.log(item);            \r\n            const existingItem = state.carts.find(cartItem => cartItem.id === item.id);\r\n            if (existingItem) {\r\n                existingItem.quantity += 1;\r\n            } else {\r\n                state.carts.push({ ...item, quantity: 1 });\r\n            }\r\n            state.quantity += 1;\r\n        },\r\n        removeFromCart(state, action) {  //action 2\r\n            const itemId = action.payload;\r\n            const existingItem = state.carts.find(cartItem => cartItem.id === itemId);\r\n            console.log(itemId);\r\n            \r\n            if (existingItem) {\r\n                \r\n                if (existingItem.quantity > 1) {\r\n                    existingItem.quantity -= 1;\r\n                } else {\r\n                    state.carts = state.carts.filter(cartItem => cartItem.id !== itemId);\r\n                }\r\n                state.quantity -= 1;\r\n            }\r\n        },\r\n        clearAllCart(state) { //action 3\r\n            state.carts = [];\r\n            state.quantity = 0;\r\n        }\r\n    }\r\n});\r\n\r\n\r\nexport const { addToCart, removeFromCart, clearAllCart } = cartSlice.actions;  //exporting the functions\r\n\r\nexport default cartSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EACjBC,KAAK,EAAE,EAAE;EACTC,QAAQ,EAAE;AACd,CAAC;AAED,MAAMC,SAAS,GAAGJ,WAAW,CAAC;EAAI;EAC9BK,IAAI,EAAE,MAAM;EACZJ,YAAY;EAAG;EACfK,QAAQ,EAAE;IACNC,SAASA,CAACC,KAAK,EAAEC,MAAM,EAAE;MAAI;MACzB,MAAMC,IAAI,GAAGD,MAAM,CAACE,OAAO;MAC3BC,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;MACjB,MAAMI,YAAY,GAAGN,KAAK,CAACN,KAAK,CAACa,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,EAAE,KAAKP,IAAI,CAACO,EAAE,CAAC;MAC1E,IAAIH,YAAY,EAAE;QACdA,YAAY,CAACX,QAAQ,IAAI,CAAC;MAC9B,CAAC,MAAM;QACHK,KAAK,CAACN,KAAK,CAACgB,IAAI,CAAC;UAAE,GAAGR,IAAI;UAAEP,QAAQ,EAAE;QAAE,CAAC,CAAC;MAC9C;MACAK,KAAK,CAACL,QAAQ,IAAI,CAAC;IACvB,CAAC;IACDgB,cAAcA,CAACX,KAAK,EAAEC,MAAM,EAAE;MAAG;MAC7B,MAAMW,MAAM,GAAGX,MAAM,CAACE,OAAO;MAC7B,MAAMG,YAAY,GAAGN,KAAK,CAACN,KAAK,CAACa,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,EAAE,KAAKG,MAAM,CAAC;MACzER,OAAO,CAACC,GAAG,CAACO,MAAM,CAAC;MAEnB,IAAIN,YAAY,EAAE;QAEd,IAAIA,YAAY,CAACX,QAAQ,GAAG,CAAC,EAAE;UAC3BW,YAAY,CAACX,QAAQ,IAAI,CAAC;QAC9B,CAAC,MAAM;UACHK,KAAK,CAACN,KAAK,GAAGM,KAAK,CAACN,KAAK,CAACmB,MAAM,CAACL,QAAQ,IAAIA,QAAQ,CAACC,EAAE,KAAKG,MAAM,CAAC;QACxE;QACAZ,KAAK,CAACL,QAAQ,IAAI,CAAC;MACvB;IACJ,CAAC;IACDmB,YAAYA,CAACd,KAAK,EAAE;MAAE;MAClBA,KAAK,CAACN,KAAK,GAAG,EAAE;MAChBM,KAAK,CAACL,QAAQ,GAAG,CAAC;IACtB;EACJ;AACJ,CAAC,CAAC;AAGF,OAAO,MAAM;EAAEI,SAAS;EAAEY,cAAc;EAAEG;AAAa,CAAC,GAAGlB,SAAS,CAACmB,OAAO,CAAC,CAAE;;AAE/E,eAAenB,SAAS,CAACoB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}