{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bismillah Traders\\\\Desktop\\\\DBMS PROJECT\\\\frontend\\\\src\\\\Components\\\\JSX\\\\DisplayCategory.jsx\";\nimport React from 'react';\nimport '../CSS/DisplayCategory.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DisplayCategory = props => {\n  // Function to capitalize the first letter of each word\n  const capitalizeWords = (text = '') => {\n    return text.split(' ').map(word => word.charAt(0).toUpperCase() + word.slice(1)).join(' ');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dc\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: props.image,\n      alt: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: capitalizeWords(props.text)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: capitalizeWords(props.category)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n};\n_c = DisplayCategory;\nexport default DisplayCategory;\nvar _c;\n$RefreshReg$(_c, \"DisplayCategory\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","DisplayCategory","props","capitalizeWords","text","split","map","word","charAt","toUpperCase","slice","join","className","children","src","image","alt","fileName","_jsxFileName","lineNumber","columnNumber","category","_c","$RefreshReg$"],"sources":["C:/Users/Bismillah Traders/Desktop/DBMS PROJECT/frontend/src/Components/JSX/DisplayCategory.jsx"],"sourcesContent":["import React from 'react';\r\nimport '../CSS/DisplayCategory.css';\r\n\r\nconst DisplayCategory = (props) => {\r\n    // Function to capitalize the first letter of each word\r\n    const capitalizeWords = (text = '') => {\r\n        return text.split(' ').map(word => word.charAt(0).toUpperCase() + word.slice(1)).join(' ');\r\n    };\r\n\r\n    return (\r\n        <div className='dc'>\r\n            <img src={props.image} alt=\"\" />\r\n            <p>{capitalizeWords(props.text)}</p>\r\n            <p>{capitalizeWords(props.category)}</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DisplayCategory;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,eAAe,GAAIC,KAAK,IAAK;EAC/B;EACA,MAAMC,eAAe,GAAGA,CAACC,IAAI,GAAG,EAAE,KAAK;IACnC,OAAOA,IAAI,CAACC,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACC,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAGF,IAAI,CAACG,KAAK,CAAC,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC;EAC9F,CAAC;EAED,oBACIX,OAAA;IAAKY,SAAS,EAAC,IAAI;IAAAC,QAAA,gBACfb,OAAA;MAAKc,GAAG,EAAEZ,KAAK,CAACa,KAAM;MAACC,GAAG,EAAC;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAChCpB,OAAA;MAAAa,QAAA,EAAIV,eAAe,CAACD,KAAK,CAACE,IAAI;IAAC;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpCpB,OAAA;MAAAa,QAAA,EAAIV,eAAe,CAACD,KAAK,CAACmB,QAAQ;IAAC;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvC,CAAC;AAEd,CAAC;AAACE,EAAA,GAbIrB,eAAe;AAerB,eAAeA,eAAe;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}